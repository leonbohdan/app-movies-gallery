{"version":3,"sources":["scripts/main.js"],"names":["url","moviesFromServer","movieFromServer","data","JSON","parse","localStorage","getItem","favoritMovies","root","document","getElementById","moviesList","querySelector","favoriteList","modal","addEventListener","event","target","classList","contains","toggle","innerHTML","f1","item","movieId","closest","id","getMovie","moviesName","includes","innerText","push","setItem","stringify","insertAdjacentHTML","favoriteItem","trim","matches","index","dataIndex","indexOf","splice","remove","getMovies","fetch","then","response","json","initMovies","initModal","pop","movies","movie","img","name","year","initFavoriteMovies","getGenres","genres","genrs","genr","stars","strs","starring","star","getStars","description","director"],"mappings":"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","file":"main.1e63f7ff.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url = 'https://my-json-server.typicode.com/moviedb-tech/movies/list';\n\nconst moviesFromServer = [];\nconst movieFromServer = [];\nconst data = JSON.parse(localStorage.getItem('fMovies'));\nconst favoritMovies = !data ? [] : data;\n\nconst root = document.getElementById('root');\nconst moviesList = root.querySelector('.movies__list');\nconst favoriteList = root.querySelector('.favorite__list');\nconst modal = root.querySelector('.modal');\n\nmodal.addEventListener('click', (event) => {\n  const item = event.target;\n\n  if (!item.classList.contains('modal__close')) {\n    return;\n  }\n  modal.classList.toggle('is-active');\n\n  modal.innerHTML = '';\n});\n\nconst f1 = (event) => {\n  const item = event.target;\n  const movieId = item.closest('.movies__item').id;\n\n  if (item.classList.contains('movies__addFavorite')) {\n    return;\n  }\n\n  getMovie(movieId);\n\n  modal.classList.toggle('is-active');\n};\n\nmoviesList.addEventListener('click', f1);\n// moviesList.removeEventListener(f1);\n\nmoviesList.addEventListener('click', (event) => {\n  const item = event.target;\n  const movieItem = item.closest('.movies__item');\n  const moviesName = movieItem.querySelector('.movies__name');\n\n  if (item.classList.contains('movies__addFavorite')) {\n    if (favoritMovies.includes(moviesName.innerText)) {\n      return;\n    }\n\n    favoritMovies.push(moviesName.innerText);\n\n    localStorage.setItem('fMovies', JSON.stringify(favoritMovies));\n\n    favoriteList.insertAdjacentHTML('beforeend', `\n      <li class=\"favorite__item\">\n        <span class=\"favorite__before\"></span>\n        <span class=\"favorite__after\"></span>\n        ${moviesName.innerText}\n      </li>\n    `);\n  }\n});\n\nfavoriteList.addEventListener('click', (event) => {\n  const item = event.target;\n  const favoriteItem = item.closest('.favorite__item').innerText.trim();\n\n  if (item.matches('.favorite__after')) {\n    const index = favoritMovies.indexOf(favoriteItem);\n    let dataIndex;\n\n    if (data) {\n      dataIndex = data.indexOf(favoriteItem);\n    }\n\n    if (index > -1) {\n      favoritMovies.splice(index, 1);\n\n      data.splice(dataIndex, 1);\n\n      localStorage.setItem('fMovies', JSON.stringify(data));\n    }\n\n    item.closest('.favorite__item').remove();\n  }\n});\n\nconst getMovies = () => {\n  return fetch(url)\n    .then(response => response.json())\n    .then(function(data) {\n      moviesFromServer.push(...data);\n\n      initMovies(moviesFromServer);\n\n      return data;\n    });\n};\n\ngetMovies();\n\nconst getMovie = (id) => {\n  return fetch(`${url}/${id}`)\n    .then((response) => response.json())\n    .then((data) => {\n      movieFromServer.push(data);\n\n      initModal(movieFromServer);\n\n      movieFromServer.pop();\n    });\n};\n\nfunction initMovies(movies) {\n  for (const movie of movies) {\n    moviesList.insertAdjacentHTML('beforeend', `\n      <div class=\"movies__item\" id=${movie.id}>\n        <img class=\"movies__image\" src=${movie.img} alt=\"movie image\"/>\n        <div class=\"movies__name\">${movie.name}</div>\n        <div class=\"movies__year\">${movie.year}</div>\n        <span class=\"movies__addFavorite\" alt=\"star\"></span>\n      </div>\n    `);\n  }\n};\n\ninitFavoriteMovies(favoritMovies);\n\nfunction initFavoriteMovies(movies) {\n  for (const name of movies) {\n    favoriteList.insertAdjacentHTML('beforeend', `\n      <li class=\"favorite__item\">\n        <span class=\"favorite__before\"></span>\n        <span class=\"favorite__after\"></span>\n        ${name}\n      </li>\n    `);\n  }\n}\n\nfunction initModal(movie) {\n\n  const getGenres = (movie) => {\n    let genrs = '';\n\n    for (const genr of movie[0].genres) {\n      genrs += `<div class=\"modal__genre\">${genr}</div>`;\n    }\n\n    return genrs;\n  };\n\n  const genres = getGenres(movie);\n\n  const getStars = (movie) => {\n    let strs = '';\n\n    for (const star of movie[0].starring) {\n      strs += `<div class=\"modal__star\">${star}</div>`;\n    }\n\n    return strs;\n  };\n\n  const stars = getStars(movie);\n\n  modal.insertAdjacentHTML('beforeend', `\n    <div class=\"modal__left\">\n      <img class=\"modal__image\" src=${movie[0].img} alt=\"movie image\" />\n      <div class=\"modal__info\">\n        <div class=\"modal__addFavorite\" alt=\"star\"> </div>\n        <div class=\"modal__year\">${movie[0].year}</div>\n      </div>\n      <div class=\"modal__genres\">${genres}</div>\n    </div>\n\n    <div class=\"modal__right\">\n      <h2 class=\"modal__name\">${movie[0].name}</h2>\n      <p class=\"modal__description\">${movie[0].description}</p>\n      <p class=\"modal__director\">Director: ${movie[0].director}</p>\n      <p class=\"modal__starring\">Starring: ${stars}</p>\n      <span class=\"modal__close\"></span>\n    </div>\n  `);\n}\n"]}